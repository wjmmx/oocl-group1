/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('agile.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Date',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    itemId: 'myform1',
                    layout: 'auto',
                    bodyPadding: 10,
                    title: 'Tennis Court Reservation ',
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    width: 401,
                                    layout: {
                                        type: 'vbox',
                                        align: 'stretch',
                                        pack: 'end'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            formBind: true,
                                            id: 'txtCustomerName',
                                            itemId: 'txtCustomerName',
                                            width: 460,
                                            fieldLabel: 'Customer name:'
                                        },
                                        {
                                            xtype: 'textfield',
                                            id: 'txtContactNum',
                                            itemId: 'txtContactNum',
                                            fieldLabel: 'Contact #',
                                            maskRe: /[0-9+]/
                                        },
                                        {
                                            xtype: 'combobox',
                                            id: 'cmbCourtName',
                                            itemId: 'cmbCourtName',
                                            fieldLabel: 'Court Name:',
                                            forceSelection: true,
                                            store: [
                                                'Court 1',
                                                'Court 2',
                                                'Court 3',
                                                'Court 4',
                                                'Court 5',
                                                'Court 6',
                                                'Court 7',
                                                'Court 8'
                                            ]
                                        },
                                        {
                                            xtype: 'datefield',
                                            id: 'dateField',
                                            itemId: 'dateField',
                                            fieldLabel: 'Date',
                                            minValue: new Date()
                                        },
                                        {
                                            xtype: 'combobox',
                                            formBind: false,
                                            flex: 1,
                                            id: 'cbxTimeFrom',
                                            itemId: 'cbxTimeFrom',
                                            fieldLabel: 'Time From:',
                                            forceSelection: true,
                                            store: [
                                                '09:00',
                                                '11:00',
                                                '13:00',
                                                '15:00',
                                                '17:00',
                                                '19:00',
                                                '21:00'
                                            ]
                                        },
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            id: 'cbxTimeTo',
                                            itemId: 'cbxTimeTo',
                                            fieldLabel: 'Time To:',
                                            forceSelection: true,
                                            store: [
                                                '09:00',
                                                '11:00',
                                                '13:00',
                                                '15:00',
                                                '17:00',
                                                '19:00',
                                                '21:00'
                                            ]
                                        },
                                        {
                                            xtype: 'container',
                                            layout: {
                                                type: 'hbox',
                                                align: 'stretch'
                                            },
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    flex: 1,
                                                    items: [
                                                        {
                                                            xtype: 'button',
                                                            id: 'reserveBtn',
                                                            itemId: 'reserveBtn',
                                                            text: 'Reserve'
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            layout: 'anchor',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    id: 'gridSchedules',
                                    itemId: 'gridSchedules',
                                    maxHeight: 300,
                                    autoScroll: true,
                                    title: 'Schedules',
                                    store: 'CourtStore',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'courtNum',
                                            itemId: 'courtNum',
                                            dataIndex: 'courtNum',
                                            text: 'Court #'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'scheduleDate',
                                            itemId: 'scheduleDate',
                                            dataIndex: 'scheduleDate',
                                            text: 'Date'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'timeFrom',
                                            itemId: 'timeFrom',
                                            dataIndex: 'timeFrom',
                                            text: 'From '
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'timeTo',
                                            itemId: 'timeTo',
                                            dataIndex: 'timeTo',
                                            text: 'To'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'reserveName',
                                            itemId: 'reserveName',
                                            minWidth: 150,
                                            defaultWidth: 150,
                                            dataIndex: 'reserveName',
                                            text: 'Reserver\'s Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            id: 'contactNum',
                                            itemId: 'contactNum',
                                            dataIndex: 'contactNum',
                                            text: 'Contact #'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onViewportAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onViewportAfterRender: function(component, eOpts) {
        //var data = "{dataList : [{courtNum: 'court1', scheduleDate:'2017-9-14',timeFrom:'9:00',timeTo:'11:00', reserveName: ''},{courtNum: 'court1', scheduleDate:'2017-9-14',timeFrom:'11:00',timeTo:'13:00', reserveName: ''},{courtNum: 'court1', scheduleDate:'2017-9-14',timeFrom:'13:00',timeTo:'15:00', reserveName: ''}]}";
        var data = [['1','Court 1','09/15/2017','09:00','11:00','nonie','12345'],['2','Court 2','09/15/2017','09:00','11:00','hello','12345'],['2','Court 2','09/15/2017','11:00','13:00','hello','12345']];
        //var dataObject = Ext.decode(data).dataList;
        console.log("1");
        console.log(data);
        var store = Ext.StoreManager.get('CourtStore');
        store.loadData(data);
        // dataObject.forEach(function(e){
        //     var modelObject = Ext.create('agile.model.CourtScheduleModel', e);
        //     store.insert(modelObject);
        // });



    }

});