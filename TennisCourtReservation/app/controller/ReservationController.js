/*
 * File: app/controller/ReservationController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('agile.controller.ReservationController', {
    extend: 'Ext.app.Controller',

    id: 'reservationController',

    refs: [
        {
            ref: 'reserveBtn',
            selector: '#reserveBtn'
        }
    ],

    onReserveBtnClick: function(button, e, eOpts) {
        var customerName = Ext.getCmp('txtCustomerName').getValue();
        var contactNum = Ext.getCmp('txtContactNum').getValue();
        var timeFrom = Ext.getCmp('cbxTimeFrom').getValue();
        var timeTo = Ext.getCmp('cbxTimeTo').getValue();
        var dateField = Ext.getCmp('dateField').getSubmitValue();
        var courtSelected = Ext.getCmp('cmbCourtName').getValue();
        var currentHour = parseInt(new Date().toLocaleTimeString('en-US', { hour12: false}).split(':')[0]);
        var currentMinute = parseInt(new Date().toLocaleTimeString('en-US', { hour12: false, minute: "numeric"}));


        if ( customerName === "" || contactNum === "" || timeFrom === null || timeTo === null || dateField === "" || courtSelected=== null){
                    alert("Please Fill up all");
        }
        else {
            var store = Ext.StoreManager.get('CourtStore');
            var timeFromHour = parseInt(timeFrom.split(':')[0]);
            var timeToHour = parseInt(timeTo.split(':')[0]);
            var validity = this.validate(currentHour,timeFromHour,currentMinute,timeToHour,store,courtSelected);
            if(validity){
                store.add({id:'0',courtNum:courtSelected,scheduleDate:dateField,timeFrom:timeFrom,timeTo:timeTo,reserveName:customerName,contactNum:contactNum});
                this.notify();
            }
        }
    },

    validate: function(currentHour, timeFromHour, currentMinute, timeToHour, store, courtSelected) {
        var regexp = new RegExp('\\d{2}');
        var dateToday = '0'+new Date().toLocaleDateString();
        var dateSubmit = Ext.getCmp('dateField').getSubmitValue();

        if(currentHour>  timeFromHour && dateToday === dateSubmit){
                alert('Time has already passed, please select another schedule');
                return false;
        }
        else if(currentHour==(timeFromHour-1)&& currentMinute>45 ){
            alert('Cannot reserved at this slot due to 15 minute rule');
            return false;
        }
        else if(timeFromHour>=timeToHour){
            alert('Schedule range must not be the same or Start must not be greater than End time');
            return false;
        }
        else{
			var isvalid = true;
            store.each(function(rec){
                var recTimeFrom = parseInt((rec.data.timeFrom).match(regexp));
                var recTimeTo = parseInt((rec.data.timeTo).match(regexp));
                if(dateSubmit==rec.data.scheduleDate && rec.data.courtNum == courtSelected && timeFromHour < recTimeTo && timeToHour > recTimeFrom){
                    alert('Time has conflict with other courts');
					isvalid = false;
                    return isvalid;
                }
            });
            return isvalid;
        }
    },

    notify: function() {
        var num = Ext.getCmp('txtContactNum').getValue();
        alert('Successfully reserved!, Successfully sent notification to ' + num);
    },

    init: function(application) {
        this.control({
            "#reserveBtn": {
                click: this.onReserveBtnClick
            }
        });
    }

});
